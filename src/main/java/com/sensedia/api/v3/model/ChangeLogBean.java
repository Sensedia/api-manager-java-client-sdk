/*
 * API Manager Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sensedia.api.v3.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sensedia.api.v3.model.ChangeLogBean;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * ChangeLogBean
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-25T23:40:42.718-03:00")
public class ChangeLogBean {
  /**
   * Gets or Sets action
   */
  public enum ActionEnum {
    CREATED("CREATED"),
    
    UPDATED("UPDATED"),
    
    DELETED("DELETED");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ActionEnum fromValue(String text) {
      for (ActionEnum b : ActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("action")
  private ActionEnum action = null;

  @JsonProperty("creationDate")
  private DateTime creationDate = null;

  @JsonProperty("credentialId")
  private Long credentialId = null;

  @JsonProperty("credentialLogin")
  private String credentialLogin = null;

  @JsonProperty("credentialName")
  private String credentialName = null;

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("jsonAfter")
  private String jsonAfter = null;

  @JsonProperty("jsonBefore")
  private String jsonBefore = null;

  @JsonProperty("objectId")
  private Long objectId = null;

  /**
   * Gets or Sets objectType
   */
  public enum ObjectTypeEnum {
    APP_TOKEN("APP_TOKEN"),
    
    AUTH_TOKEN("AUTH_TOKEN"),
    
    API_DEFINITION("API_DEFINITION"),
    
    USER_ACCOUNT("USER_ACCOUNT"),
    
    ACCESS_CREDENTIAL("ACCESS_CREDENTIAL"),
    
    EXTERNAL_LISTENER("EXTERNAL_LISTENER"),
    
    APICOMPONENTINTERCEPTOR("APICOMPONENTINTERCEPTOR"),
    
    PLANINTERCEPTOR("PLANINTERCEPTOR"),
    
    PLAN("PLAN"),
    
    CUSTOM_INTERCEPTOR("CUSTOM_INTERCEPTOR"),
    
    CUSTOM_JAVA_INTERCEPTOR("CUSTOM_JAVA_INTERCEPTOR"),
    
    BAAS("BAAS"),
    
    ENVIRONMENT("ENVIRONMENT"),
    
    REVISION("REVISION"),
    
    TEAM("TEAM"),
    
    DEPLOYMENT("DEPLOYMENT"),
    
    GATEWAY("GATEWAY");

    private String value;

    ObjectTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectTypeEnum fromValue(String text) {
      for (ObjectTypeEnum b : ObjectTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("objectType")
  private ObjectTypeEnum objectType = null;

  @JsonProperty("parent")
  private ChangeLogBean parent = null;

  public ChangeLogBean action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @ApiModelProperty(value = "")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public ChangeLogBean creationDate(DateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(DateTime creationDate) {
    this.creationDate = creationDate;
  }

  public ChangeLogBean credentialId(Long credentialId) {
    this.credentialId = credentialId;
    return this;
  }

   /**
   * Get credentialId
   * @return credentialId
  **/
  @ApiModelProperty(value = "")
  public Long getCredentialId() {
    return credentialId;
  }

  public void setCredentialId(Long credentialId) {
    this.credentialId = credentialId;
  }

  public ChangeLogBean credentialLogin(String credentialLogin) {
    this.credentialLogin = credentialLogin;
    return this;
  }

   /**
   * Get credentialLogin
   * @return credentialLogin
  **/
  @ApiModelProperty(value = "")
  public String getCredentialLogin() {
    return credentialLogin;
  }

  public void setCredentialLogin(String credentialLogin) {
    this.credentialLogin = credentialLogin;
  }

  public ChangeLogBean credentialName(String credentialName) {
    this.credentialName = credentialName;
    return this;
  }

   /**
   * Get credentialName
   * @return credentialName
  **/
  @ApiModelProperty(value = "")
  public String getCredentialName() {
    return credentialName;
  }

  public void setCredentialName(String credentialName) {
    this.credentialName = credentialName;
  }

  public ChangeLogBean id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ChangeLogBean jsonAfter(String jsonAfter) {
    this.jsonAfter = jsonAfter;
    return this;
  }

   /**
   * Get jsonAfter
   * @return jsonAfter
  **/
  @ApiModelProperty(value = "")
  public String getJsonAfter() {
    return jsonAfter;
  }

  public void setJsonAfter(String jsonAfter) {
    this.jsonAfter = jsonAfter;
  }

  public ChangeLogBean jsonBefore(String jsonBefore) {
    this.jsonBefore = jsonBefore;
    return this;
  }

   /**
   * Get jsonBefore
   * @return jsonBefore
  **/
  @ApiModelProperty(value = "")
  public String getJsonBefore() {
    return jsonBefore;
  }

  public void setJsonBefore(String jsonBefore) {
    this.jsonBefore = jsonBefore;
  }

  public ChangeLogBean objectId(Long objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * Get objectId
   * @return objectId
  **/
  @ApiModelProperty(value = "")
  public Long getObjectId() {
    return objectId;
  }

  public void setObjectId(Long objectId) {
    this.objectId = objectId;
  }

  public ChangeLogBean objectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @ApiModelProperty(value = "")
  public ObjectTypeEnum getObjectType() {
    return objectType;
  }

  public void setObjectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
  }

  public ChangeLogBean parent(ChangeLogBean parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(value = "")
  public ChangeLogBean getParent() {
    return parent;
  }

  public void setParent(ChangeLogBean parent) {
    this.parent = parent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeLogBean changeLogBean = (ChangeLogBean) o;
    return Objects.equals(this.action, changeLogBean.action) &&
        Objects.equals(this.creationDate, changeLogBean.creationDate) &&
        Objects.equals(this.credentialId, changeLogBean.credentialId) &&
        Objects.equals(this.credentialLogin, changeLogBean.credentialLogin) &&
        Objects.equals(this.credentialName, changeLogBean.credentialName) &&
        Objects.equals(this.id, changeLogBean.id) &&
        Objects.equals(this.jsonAfter, changeLogBean.jsonAfter) &&
        Objects.equals(this.jsonBefore, changeLogBean.jsonBefore) &&
        Objects.equals(this.objectId, changeLogBean.objectId) &&
        Objects.equals(this.objectType, changeLogBean.objectType) &&
        Objects.equals(this.parent, changeLogBean.parent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, creationDate, credentialId, credentialLogin, credentialName, id, jsonAfter, jsonBefore, objectId, objectType, parent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeLogBean {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    credentialId: ").append(toIndentedString(credentialId)).append("\n");
    sb.append("    credentialLogin: ").append(toIndentedString(credentialLogin)).append("\n");
    sb.append("    credentialName: ").append(toIndentedString(credentialName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    jsonAfter: ").append(toIndentedString(jsonAfter)).append("\n");
    sb.append("    jsonBefore: ").append(toIndentedString(jsonBefore)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

