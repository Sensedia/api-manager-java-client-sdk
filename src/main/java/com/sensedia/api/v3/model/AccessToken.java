/*
 * API Manager Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sensedia.api.v3.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sensedia.api.v3.model.APISimpleBean;
import com.sensedia.api.v3.model.AppTokenSimpleBean;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * Access token model
 */
@ApiModel(description = "Access token model")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-25T23:40:42.718-03:00")
public class AccessToken {
  @JsonProperty("apis")
  private List<APISimpleBean> apis = null;

  @JsonProperty("app")
  private AppTokenSimpleBean app = null;

  @JsonProperty("code")
  private String code = null;

  @JsonProperty("creationDate")
  private DateTime creationDate = null;

  @JsonProperty("expiredDate")
  private DateTime expiredDate = null;

  @JsonProperty("expiresIn")
  private Long expiresIn = null;

  @JsonProperty("extraInfo")
  private Object extraInfo = null;

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("owner")
  private String owner = null;

  @JsonProperty("planIds")
  private List<Long> planIds = null;

  @JsonProperty("refreshToken")
  private String refreshToken = null;

  @JsonProperty("scope")
  private String scope = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    REVOKED("REVOKED"),
    
    EXPIRED("EXPIRED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  public AccessToken apis(List<APISimpleBean> apis) {
    this.apis = apis;
    return this;
  }

  public AccessToken addApisItem(APISimpleBean apisItem) {
    if (this.apis == null) {
      this.apis = new ArrayList<APISimpleBean>();
    }
    this.apis.add(apisItem);
    return this;
  }

   /**
   * Get apis
   * @return apis
  **/
  @ApiModelProperty(value = "")
  public List<APISimpleBean> getApis() {
    return apis;
  }

  public void setApis(List<APISimpleBean> apis) {
    this.apis = apis;
  }

  public AccessToken app(AppTokenSimpleBean app) {
    this.app = app;
    return this;
  }

   /**
   * Get app
   * @return app
  **/
  @ApiModelProperty(value = "")
  public AppTokenSimpleBean getApp() {
    return app;
  }

  public void setApp(AppTokenSimpleBean app) {
    this.app = app;
  }

  public AccessToken code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public AccessToken creationDate(DateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(DateTime creationDate) {
    this.creationDate = creationDate;
  }

  public AccessToken expiredDate(DateTime expiredDate) {
    this.expiredDate = expiredDate;
    return this;
  }

   /**
   * Get expiredDate
   * @return expiredDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getExpiredDate() {
    return expiredDate;
  }

  public void setExpiredDate(DateTime expiredDate) {
    this.expiredDate = expiredDate;
  }

  public AccessToken expiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * Get expiresIn
   * @return expiresIn
  **/
  @ApiModelProperty(value = "")
  public Long getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
  }

  public AccessToken extraInfo(Object extraInfo) {
    this.extraInfo = extraInfo;
    return this;
  }

   /**
   * Get extraInfo
   * @return extraInfo
  **/
  @ApiModelProperty(value = "")
  public Object getExtraInfo() {
    return extraInfo;
  }

  public void setExtraInfo(Object extraInfo) {
    this.extraInfo = extraInfo;
  }

  public AccessToken id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AccessToken owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public AccessToken planIds(List<Long> planIds) {
    this.planIds = planIds;
    return this;
  }

  public AccessToken addPlanIdsItem(Long planIdsItem) {
    if (this.planIds == null) {
      this.planIds = new ArrayList<Long>();
    }
    this.planIds.add(planIdsItem);
    return this;
  }

   /**
   * Get planIds
   * @return planIds
  **/
  @ApiModelProperty(value = "")
  public List<Long> getPlanIds() {
    return planIds;
  }

  public void setPlanIds(List<Long> planIds) {
    this.planIds = planIds;
  }

  public AccessToken refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Get refreshToken
   * @return refreshToken
  **/
  @ApiModelProperty(value = "")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public AccessToken scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public AccessToken status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessToken accessToken = (AccessToken) o;
    return Objects.equals(this.apis, accessToken.apis) &&
        Objects.equals(this.app, accessToken.app) &&
        Objects.equals(this.code, accessToken.code) &&
        Objects.equals(this.creationDate, accessToken.creationDate) &&
        Objects.equals(this.expiredDate, accessToken.expiredDate) &&
        Objects.equals(this.expiresIn, accessToken.expiresIn) &&
        Objects.equals(this.extraInfo, accessToken.extraInfo) &&
        Objects.equals(this.id, accessToken.id) &&
        Objects.equals(this.owner, accessToken.owner) &&
        Objects.equals(this.planIds, accessToken.planIds) &&
        Objects.equals(this.refreshToken, accessToken.refreshToken) &&
        Objects.equals(this.scope, accessToken.scope) &&
        Objects.equals(this.status, accessToken.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apis, app, code, creationDate, expiredDate, expiresIn, extraInfo, id, owner, planIds, refreshToken, scope, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessToken {\n");
    
    sb.append("    apis: ").append(toIndentedString(apis)).append("\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    expiredDate: ").append(toIndentedString(expiredDate)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    extraInfo: ").append(toIndentedString(extraInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    planIds: ").append(toIndentedString(planIds)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

