/*
 * API Manager Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sensedia.api.v3.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sensedia.api.v3.model.APIComponentSimpleBean;
import com.sensedia.api.v3.model.InterceptorReferenceBean;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * InterceptorBean
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-06T11:21:38.562-03:00")
public class InterceptorBean {
  @JsonProperty("content")
  private String content = null;

  /**
   * Gets or Sets executionPoint
   */
  public enum ExecutionPointEnum {
    FIRST("FIRST"),
    
    SECOND("SECOND"),
    
    ANY("ANY");

    private String value;

    ExecutionPointEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExecutionPointEnum fromValue(String text) {
      for (ExecutionPointEnum b : ExecutionPointEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("executionPoint")
  private ExecutionPointEnum executionPoint = null;

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("idTemp")
  private Long idTemp = null;

  @JsonProperty("operation")
  private APIComponentSimpleBean operation = null;

  @JsonProperty("parent")
  private InterceptorReferenceBean parent = null;

  /**
   * Gets or Sets parentType
   */
  public enum ParentTypeEnum {
    REVISION("REVISION"),
    
    RESOURCE("RESOURCE"),
    
    OPERATION("OPERATION"),
    
    PLAN("PLAN");

    private String value;

    ParentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ParentTypeEnum fromValue(String text) {
      for (ParentTypeEnum b : ParentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("parentType")
  private ParentTypeEnum parentType = null;

  @JsonProperty("planId")
  private Long planId = null;

  @JsonProperty("position")
  private Integer position = null;

  @JsonProperty("resource")
  private APIComponentSimpleBean resource = null;

  @JsonProperty("revision")
  private APIComponentSimpleBean revision = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    CHANGED_VALUE("CHANGED_VALUE"),
    
    REFERENCE("REFERENCE"),
    
    REMOVED("REMOVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("type")
  private String type = null;

  public InterceptorBean content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @ApiModelProperty(value = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public InterceptorBean executionPoint(ExecutionPointEnum executionPoint) {
    this.executionPoint = executionPoint;
    return this;
  }

   /**
   * Get executionPoint
   * @return executionPoint
  **/
  @ApiModelProperty(value = "")
  public ExecutionPointEnum getExecutionPoint() {
    return executionPoint;
  }

  public void setExecutionPoint(ExecutionPointEnum executionPoint) {
    this.executionPoint = executionPoint;
  }

  public InterceptorBean id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InterceptorBean idTemp(Long idTemp) {
    this.idTemp = idTemp;
    return this;
  }

   /**
   * Get idTemp
   * @return idTemp
  **/
  @ApiModelProperty(value = "")
  public Long getIdTemp() {
    return idTemp;
  }

  public void setIdTemp(Long idTemp) {
    this.idTemp = idTemp;
  }

  public InterceptorBean operation(APIComponentSimpleBean operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @ApiModelProperty(value = "")
  public APIComponentSimpleBean getOperation() {
    return operation;
  }

  public void setOperation(APIComponentSimpleBean operation) {
    this.operation = operation;
  }

  public InterceptorBean parent(InterceptorReferenceBean parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(value = "")
  public InterceptorReferenceBean getParent() {
    return parent;
  }

  public void setParent(InterceptorReferenceBean parent) {
    this.parent = parent;
  }

  public InterceptorBean parentType(ParentTypeEnum parentType) {
    this.parentType = parentType;
    return this;
  }

   /**
   * Get parentType
   * @return parentType
  **/
  @ApiModelProperty(value = "")
  public ParentTypeEnum getParentType() {
    return parentType;
  }

  public void setParentType(ParentTypeEnum parentType) {
    this.parentType = parentType;
  }

  public InterceptorBean planId(Long planId) {
    this.planId = planId;
    return this;
  }

   /**
   * Get planId
   * @return planId
  **/
  @ApiModelProperty(value = "")
  public Long getPlanId() {
    return planId;
  }

  public void setPlanId(Long planId) {
    this.planId = planId;
  }

  public InterceptorBean position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @ApiModelProperty(value = "")
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }

  public InterceptorBean resource(APIComponentSimpleBean resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @ApiModelProperty(value = "")
  public APIComponentSimpleBean getResource() {
    return resource;
  }

  public void setResource(APIComponentSimpleBean resource) {
    this.resource = resource;
  }

  public InterceptorBean revision(APIComponentSimpleBean revision) {
    this.revision = revision;
    return this;
  }

   /**
   * Get revision
   * @return revision
  **/
  @ApiModelProperty(value = "")
  public APIComponentSimpleBean getRevision() {
    return revision;
  }

  public void setRevision(APIComponentSimpleBean revision) {
    this.revision = revision;
  }

  public InterceptorBean status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public InterceptorBean type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InterceptorBean interceptorBean = (InterceptorBean) o;
    return Objects.equals(this.content, interceptorBean.content) &&
        Objects.equals(this.executionPoint, interceptorBean.executionPoint) &&
        Objects.equals(this.id, interceptorBean.id) &&
        Objects.equals(this.idTemp, interceptorBean.idTemp) &&
        Objects.equals(this.operation, interceptorBean.operation) &&
        Objects.equals(this.parent, interceptorBean.parent) &&
        Objects.equals(this.parentType, interceptorBean.parentType) &&
        Objects.equals(this.planId, interceptorBean.planId) &&
        Objects.equals(this.position, interceptorBean.position) &&
        Objects.equals(this.resource, interceptorBean.resource) &&
        Objects.equals(this.revision, interceptorBean.revision) &&
        Objects.equals(this.status, interceptorBean.status) &&
        Objects.equals(this.type, interceptorBean.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, executionPoint, id, idTemp, operation, parent, parentType, planId, position, resource, revision, status, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InterceptorBean {\n");
    
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    executionPoint: ").append(toIndentedString(executionPoint)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idTemp: ").append(toIndentedString(idTemp)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    parentType: ").append(toIndentedString(parentType)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

