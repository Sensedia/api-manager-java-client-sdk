/*
 * API Manager Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sensedia.api.v3;

import com.sensedia.api.v3.client.ApiException;
import com.sensedia.api.v3.model.ChangeLogBean;
import com.sensedia.api.v3.model.PlanResponse;
import com.sensedia.api.v3.model.ResponseEntity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlansApi
 */
@Ignore
public class PlansApiTest {

    private final PlansApi api = new PlansApi();

    
    /**
     * Clone a plan
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clonePlan1Test() throws ApiException {
        String id = null;
        String sensediaAuth = null;
        PlanResponse response = api.clonePlan1(id, sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Create a new plan
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPlan1Test() throws ApiException {
        PlanResponse planBean = null;
        String sensediaAuth = null;
        PlanResponse response = api.createPlan1(planBean, sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Return all plan
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllPlan1Test() throws ApiException {
        String sensediaAuth = null;
        List<PlanResponse> response = api.getAllPlan1(sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Retrive changelog per plan id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChangeLogByPlanId1Test() throws ApiException {
        Long id = null;
        String sensediaAuth = null;
        List<ChangeLogBean> response = api.getChangeLogByPlanId1(id, sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Find plan by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPlanById1Test() throws ApiException {
        String id = null;
        String sensediaAuth = null;
        PlanResponse response = api.getPlanById1(id, sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Find default plan by api id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPlanDefaultByApiId1Test() throws ApiException {
        String id = null;
        String sensediaAuth = null;
        PlanResponse response = api.getPlanDefaultByApiId1(id, sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Retrieve plan total
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void plansCount1Test() throws ApiException {
        String sensediaAuth = null;
        Long response = api.plansCount1(sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Delete a plan
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removePlan1Test() throws ApiException {
        String id = null;
        String sensediaAuth = null;
        ResponseEntity response = api.removePlan1(id, sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Update a plan
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePlan1Test() throws ApiException {
        String id = null;
        String sensediaAuth = null;
        PlanResponse planBean = null;
        PlanResponse response = api.updatePlan1(id, sensediaAuth, planBean);

        // TODO: test validations
    }
    
    /**
     * Validate partial a plan
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validatePartialPlan1Test() throws ApiException {
        String sensediaAuth = null;
        PlanResponse planBean = null;
        ResponseEntity response = api.validatePartialPlan1(sensediaAuth, planBean);

        // TODO: test validations
    }
    
}
