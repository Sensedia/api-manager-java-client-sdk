/*
 * API Manager Portal
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sensedia.api.v3;

import com.sensedia.api.v3.client.ApiException;
import com.sensedia.api.v3.model.Call;
import com.sensedia.api.v3.model.CallResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CallsApi
 */
@Ignore
public class CallsApiTest {

    private final CallsApi api = new CallsApi();

    
    /**
     * Retrive call by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retriveCallById1Test() throws ApiException {
        String id = null;
        String sensediaAuth = null;
        Call response = api.retriveCallById1(id, sensediaAuth);

        // TODO: test validations
    }
    
    /**
     * Retrive calls with filters
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retriveCallsWithFiltrs1Test() throws ApiException {
        String sensediaAuth = null;
        Integer actualPage = null;
        String baseUris = null;
        String appTokenCode = null;
        Integer pageSize = null;
        String appTokenName = null;
        String authTokenOwner = null;
        Long apiId = null;
        Long operationId = null;
        Long resourceId = null;
        Long environmentId = null;
        Long revisionId = null;
        String uri = null;
        String customSearch = null;
        String method = null;
        Integer httpStatusFrom = null;
        Integer httpStatusTo = null;
        String beginDate = null;
        String endDate = null;
        String appDeveloper = null;
        String forceDownload = null;
        CallResponse response = api.retriveCallsWithFiltrs1(sensediaAuth, actualPage, baseUris, appTokenCode, pageSize, appTokenName, authTokenOwner, apiId, operationId, resourceId, environmentId, revisionId, uri, customSearch, method, httpStatusFrom, httpStatusTo, beginDate, endDate, appDeveloper, forceDownload);

        // TODO: test validations
    }
    
    /**
     * Retrive calls total by date
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retriveTotalCallsByDate1Test() throws ApiException {
        String date = null;
        String sensediaAuth = null;
        Long apiId = null;
        Long response = api.retriveTotalCallsByDate1(date, sensediaAuth, apiId);

        // TODO: test validations
    }
    
}
